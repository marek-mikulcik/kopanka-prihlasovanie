@page "/"
@page "/prihlasenie/{tenant}"
@attribute [AllowAnonymous]

<PageTitle>Prihlasovanie na duchovné cvičenia</PageTitle>
@using Marek.Prihlasenie.Data
@inject UdalostService UdalostService
@inject InfoService InfoService

<h1>Termíny duchovných cvičení</h1>
<p>Prosím vyberte si z nasledujúcich možností</p>
@if (info != null)
{
    <h2 style="display:@(info?.Zaciatok > teraz ? "block" : "none")">Prihlasovanie začína
        @info?.Zaciatok <small class="fs-6"> už o @((int)(info?.Zaciatok - teraz).Value.TotalMinutes)
            minút</small></h2>
    <h2 style="display:@(teraz > info?.Koniec ? "block" : "none")">Prihlasovanie bolo ukončené</h2>
}
@if (udalosti == null)
{
    <p><em>Počkajte prosím, stránka sa načítava ...</em></p>
}
else
{
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var udalost in udalosti)
        {
            <UdalostCard udalost=@udalost Otvorene=@prihlasovanieOtvorene />
        }
    </div>
}

<p class="pt-4">Ďakujeme za pochopenie a spoluprácu</p>

@code {
    [Parameter]
    public string? Tenant { get; set; }
    private static TimeZoneInfo tzi = TimeZoneInfo.FindSystemTimeZoneById("Europe/Bratislava");
    private bool prihlasovanieOtvorene = false;
    private Info? info;
    private List<Udalost>? udalosti;
    private DateTime teraz = TimeZoneInfo.ConvertTime(DateTime.Now, tzi);
    protected override async Task OnInitializedAsync()
    {
        info = await InfoService.GetInfo(Tenant ?? "main");
        var udalostiRaw = await UdalostService.GetUdalostiAsync(info.Terminy.Split(","));
        udalosti = udalostiRaw.OrderBy(l => l.RowKey).ToList<Udalost>();

        prihlasovanieOtvorene = info.Zaciatok < teraz && teraz < info.Koniec;
        if (info.Zaciatok > DateTime.Now)
        {
            var timer = new System.Threading.Timer((_) =>
            {
                teraz = TimeZoneInfo.ConvertTime(DateTime.Now, tzi);
                prihlasovanieOtvorene = info.Zaciatok < teraz && teraz < info.Koniec;
                InvokeAsync(StateHasChanged);
            }, null, 0, 60 * 1000);
        }
    }
}
