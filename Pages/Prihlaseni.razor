@page "/prihlaseni/{udalostKey}"

<PageTitle>Prehľad prihlásených</PageTitle>

@using Marek.Prihlasenie.Data
@using System.Text.Json
@inject UdalostService UdalostService
@inject InfoService InfoService
@inject DialogService DialogService

<h1>Prehľad prihlásených</h1>
@if (udalost == null)
{
    <p><em>Počkajte prosím, stránka sa načítava ...</em></p>
}
else
{
    <div class="card">
        <div class="card-header bg-info fs-4">
            @udalost.Nazov
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    @((MarkupString)udalost.HtmlPopis)
                </div>
                <div class="col">
                    <p class="text-end">Počet voľných miest: <b class="fs-2">@(udalost?.max - udalost?.pocet)</b></p>
                </div>
            </div>
        </div>
        <ul class="list-group list-group-flush">
            @foreach (var registracia in udalost.RegList)
            {
                <a href="_self" class="list-group-item list-group-item-action" onclick="async () => await ShowOdhlasDialog(registracia)">@registracia.Meno</a>
            }
        </ul>
    </div>
}
@code {
    [Parameter]
    public string udalostKey { get; set; }
    private Udalost udalost;
    protected override async Task OnInitializedAsync()
    {
        //var info = await InfoService.GetInfo(Tenant ?? "main");
        udalost = await UdalostService.GetUdalost(udalostKey);

        if (!string.IsNullOrEmpty(udalost.registracie))
        {
            udalost.RegList = JsonSerializer.Deserialize<List<Registracia>>(udalost.registracie);
        }
        else
            udalost.RegList = new List<Registracia>();        
    }
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
    private Registracia odregistracia = new Registracia();
    private async Task ShowOdhlasDialog(Registracia registracia)
    {
        odregistracia = registracia;
        odregistracia.Telefon = "";

        var result = await DialogService.OpenAsync("Odhlásenie: " + registracia.Meno, ds =>
        @<div class="">
            <EditForm Model="registracia" OnValidSubmit="() => { HandleValidSubmit(); ds.Close(true); }">
                <div class="card-body">
                    <DataAnnotationsValidator />
                    <label for="meno">Meno a Priezvisko</label>
                    <InputText id="meno" @bind-Value="registracia.Meno" class="form-control" disabled="disabled" />
                    <label for="telefon">Prosím zadajte správne telefón</label>
                    <InputText id="telefon" @bind-Value="registracia.Telefon" class="form-control" />
                    
                </div>
                <div class="card-body text-right">
                    <button type="button" class="btn btn-warning" @onclick="() => ds.Close(false)">Zrušiť</button>
                    <button type="submit" class="btn btn-primary">Prihlásiť</button>
                </div>
            </EditForm>
        </div>
        ); 
    }

    private async void HandleValidSubmit()
    {}
}
